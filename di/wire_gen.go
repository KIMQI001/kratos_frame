// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"kratos_frame/internal/dao"
	"kratos_frame/internal/server/http"
	"kratos_frame/internal/service"

	"github.com/google/wire"
)

// Injectors from wire.go:

func InitApp() (*App, func(), error) {
	redis, err := dao.NewRedis()
	if err != nil {
		return nil, nil, err
	}
	memcache, err := dao.NewMC()
	if err != nil {
		return nil, nil, err
	}
	v, err := dao.NewDB()
	if err != nil {
		return nil, nil, err
	}
	enforcer, err := dao.NewCasBin()
	if err != nil {
		return nil, nil, err
	}
	daoDao, err := dao.New(redis, memcache, v, enforcer)
	if err != nil {
		return nil, nil, err
	}
	serviceService, err := service.New(daoDao)
	if err != nil {
		return nil, nil, err
	}
	engine, err := http.New(serviceService)
	if err != nil {
		return nil, nil, err
	}
	app, cleanup, err := NewApp(serviceService, engine)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
		cleanup()
	}, nil
}

// wire.go:

var daoProvider = wire.NewSet(dao.New, dao.NewDB, dao.NewRedis, dao.NewMC, dao.NewCasBin)

var serviceProvider = wire.NewSet(service.New)
